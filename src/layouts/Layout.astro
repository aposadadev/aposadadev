---
interface Props {
  title: string;
  description?: string;
  image?: string;
  url?: string;
  lang?: "en" | "es";
}

import { useTranslations } from "../i18n/utils";

const { title, description, image, url, lang = "en" } = Astro.props;

// Validate lang prop
if (lang && !["en", "es"].includes(lang)) {
  throw new Error(`Invalid language: ${lang}. Supported languages: en, es`);
}

// Constants
const SITE_BASE_URL = "https://aposadadev.com";
const DEFAULT_IMAGE = "/hero.webp";

// Initialize translations
const t = useTranslations(lang);

// Default meta values
const defaultDescription = t("meta.description");
const defaultImage = DEFAULT_IMAGE;

// URL handling - siteUrl and canonicalUrl are identical, so compute once
const baseUrl = lang === "es" ? `${SITE_BASE_URL}/es/` : SITE_BASE_URL;
const siteUrl = url || baseUrl;
const canonicalUrl = siteUrl; // Canonical is always the same as siteUrl
---

<!doctype html>
<html
  lang={lang}
  class="font-sans bg-slate-950 dark min-h-screen overflow-x-hidden layout-html"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description || defaultDescription} />
    <meta
      name="keywords"
      content="Andrés Posada, software engineer, full stack developer, React, Node.js, TypeScript, web development, mobile development, portfolio, Colombia, Bogotá, desarrollador de software, ingeniero de software"
    />
    <meta name="author" content="Andrés Posada" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content={lang} />
    <meta name="geo.region" content="CO-DC" />
    <meta name="geo.placename" content="Bogotá" />
    <meta name="geo.position" content="4.7110;-74.0721" />
    <meta name="ICBM" content="4.7110, -74.0721" />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/favicon.svg" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteUrl} />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content={description || defaultDescription}
    />
    <meta property="og:image" content={image || defaultImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Andrés Posada - Software Engineer" />
    <meta property="og:locale" content={lang === "es" ? "es_CO" : "en_US"} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={siteUrl} />
    <meta property="twitter:title" content={title} />
    <meta
      property="twitter:description"
      content={description || defaultDescription}
    />
    <meta property="twitter:image" content={image || defaultImage} />
    <meta property="twitter:creator" content="@aposadadev" />

    <!-- Additional SEO -->
    <meta name="theme-color" content="#00d4ff" />
    <meta name="msapplication-TileColor" content="#00d4ff" />
    <link rel="alternate" hreflang={lang} href={siteUrl} />
    <link
      rel="alternate"
      hreflang={lang === "es" ? "en" : "es"}
      href={lang === "es" ? siteUrl.replace("/es/", "/") : siteUrl + "es/"}
    />

    <!-- Structured Data (JSON-LD) -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Person",
        name: "Andrés Posada",
        jobTitle: lang === "es" ? "Ingeniero de Software" : "Software Engineer",
        url: siteUrl,
        sameAs: [
          "https://github.com/aposadadev",
          "https://linkedin.com/in/aposadadev",
          "https://twitter.com/aposadadev",
          "https://instagram.com/aposadadev",
        ],
        knowsAbout: [
          "React",
          "Node.js",
          "TypeScript",
          "React Native",
          "Fastify",
          "NestJS",
          "PostgreSQL",
          "MongoDB",
          "Full Stack Development",
          "Web Development",
          "Mobile Development",
        ],
        address: {
          "@type": "PostalAddress",
          addressLocality: "Bogotá",
          addressCountry: "Colombia",
        },
        description: description || defaultDescription,
      })}
    />

    <!-- Google Analytics -->
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"
    ></script>
    <script>
      declare global {
        interface Window {
          dataLayer: any[];
        }
      }
      window.dataLayer = window.dataLayer || [];
      function gtag(...args: any[]) {
        window.dataLayer.push(args);
      }
      gtag("js", new Date());
      gtag("config", "GA_MEASUREMENT_ID");
    </script>
  </head>
  <body class="relative m-0 p-0 bg-transparent layout-body">
    <slot />
  </body>
</html>
<style is:global>
  /* CSS variables para colores personalizados */
  :root {
    --neon-cyan: #00ffff;
    --neon-pink: #ff00ff;
    --neon-green: #00ff00;
    --neon-purple: #8b00ff;
    --neon-orange: #ff6600;
    --dark-bg: #0a0a0f;
    --darker-bg: #050508;
    --grid-color: rgba(0, 255, 255, 0.1);
  }

  /* Background complejo con múltiples gradientes */
  .layout-html {
    background: radial-gradient(
        ellipse 50% 80% at 20% 40%,
        rgba(0, 255, 255, 0.15),
        transparent
      ),
      radial-gradient(
        ellipse 50% 80% at 80% 60%,
        rgba(255, 0, 255, 0.15),
        transparent
      ),
      radial-gradient(
        ellipse 100% 80% at 50% 100%,
        rgba(139, 0, 255, 0.1),
        transparent
      ),
      linear-gradient(180deg, var(--dark-bg) 0%, var(--darker-bg) 100%);
    background-attachment: fixed;
    color-scheme: dark;
  }

  /* Grid pattern animado complejo */
  .layout-body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
        90deg,
        transparent,
        transparent 98px,
        rgba(0, 255, 255, 0.03) 100px
      ),
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 98px,
        rgba(255, 0, 255, 0.03) 100px
      );
    pointer-events: none;
    z-index: -1;
    animation: grid-glow 4s ease-in-out infinite alternate;
  }

  @keyframes grid-glow {
    0% {
      opacity: 0.3;
    }
    100% {
      opacity: 0.7;
    }
  }

  /* Font mono para código */
  code {
    font-family: Menlo, Monaco, "Lucida Console", "Liberation Mono",
      "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Courier New", monospace;
  }
</style>
