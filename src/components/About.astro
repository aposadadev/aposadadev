---
// About Component
---

<section id="about" class="py-16 lg:py-24 relative z-10 bg-white/[0.01]">
  <div class="mx-auto w-full max-w-[1250px] px-4 lg:px-12">
    <!-- Section Header -->
    <div class="mb-16 text-center">
      <h2
        class="text-4xl md:text-5xl lg:text-6xl font-bold mb-4 flex items-center justify-center gap-4 text-white"
      >
        <span
          class="bg-gradient-to-r from-cyan-400 to-purple-500 bg-clip-text text-transparent text-2xl lg:text-3xl font-normal"
          >01.</span
        >
        About Me
      </h2>
      <div
        class="w-24 lg:w-32 h-0.5 bg-gradient-to-r from-cyan-400 to-purple-500 mx-auto rounded-full"
      >
      </div>
    </div>

    <!-- About Content -->
    <div class="space-y-16">
      <!-- Main Content Grid -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-20 items-start">
        <!-- Text Content -->
        <div class="text-white/80 font-normal leading-relaxed space-y-6">
          <p class="text-lg lg:text-xl text-white/90 mb-6">
            Hello! I'm Andrés Posada, a software engineer with 7 years of
            experience in web and mobile development, specializing in
            JavaScript, Node.js, React, Vue and SQL. I have participated in
            projects from conception to production deployment, designing APIs,
            databases, real-time applications and modernizing critical
            platforms.
          </p>

          <p class="text-base lg:text-lg">
            Throughout my career, I've had the privilege of working across
            diverse sectors including
            <a
              href="#"
              class="text-cyan-400 hover:text-purple-500 transition-colors duration-300 relative group"
            >
              healthcare
              <span
                class="absolute bottom-0 left-0 w-0 h-px bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:w-full transition-all duration-300"
              ></span>
            </a>,
            <a
              href="#"
              class="text-cyan-400 hover:text-purple-500 transition-colors duration-300 relative group"
            >
              financial services
              <span
                class="absolute bottom-0 left-0 w-0 h-px bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:w-full transition-all duration-300"
              ></span>
            </a>, and
            <a
              href="#"
              class="text-cyan-400 hover:text-purple-500 transition-colors duration-300 relative group"
            >
              airport management
              <span
                class="absolute bottom-0 left-0 w-0 h-px bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:w-full transition-all duration-300"
              ></span>
            </a>. My expertise spans from building scalable backend
            architectures to crafting intuitive user interfaces, with a strong
            focus on real-time applications and system modernization.
          </p>

          <p class="text-base lg:text-lg">
            I'm passionate about creating robust, efficient solutions that solve
            real-world problems. Whether it's developing instant messaging
            platforms, payment systems, or healthcare management software, I
            bring a comprehensive approach that covers the entire development
            lifecycle.
          </p>
        </div>

        <!-- Image Side -->
        <div class="flex justify-center">
          <div class="relative w-72 h-80 lg:w-80 lg:h-96">
            <div
              class="absolute inset-0 bg-gradient-to-br from-cyan-400/20 to-purple-500/20 rounded-xl z-30 opacity-80 hover:opacity-30 transition-opacity duration-300"
            >
            </div>
            <img
              src="/hero-image.jpg"
              alt="Andrés Posada working"
              class="w-full h-full object-cover rounded-xl relative z-20 transition-all duration-300 filter grayscale-[20%] hover:grayscale-0 hover:-translate-x-2 hover:-translate-y-2"
            />
            <div
              class="absolute top-5 left-5 w-full h-full border-2 border-cyan-400/40 hover:border-purple-500/60 rounded-xl z-10 transition-all duration-300 hover:translate-x-2 hover:translate-y-2"
            >
            </div>
          </div>
        </div>
      </div>

      <!-- Skills Highlight -->
      <div class="mt-16">
        <h3
          class="text-3xl lg:text-4xl font-semibold mb-8 text-center bg-gradient-to-r from-cyan-400 to-purple-500 bg-clip-text text-transparent"
        >
          Key Technologies & Skills
        </h3>

        <!-- Desktop Grid (hidden on mobile) -->
        <div class="hidden lg:grid grid-cols-4 gap-6 max-w-6xl mx-auto">
          <div
            class="bg-white/5 border border-white/10 rounded-xl p-6 lg:p-8 backdrop-blur-sm transition-all duration-300 hover:bg-white/8 hover:border-cyan-400/20 hover:-translate-y-1"
          >
            <h4 class="text-cyan-400 text-lg lg:text-xl font-semibold mb-4">
              Frontend
            </h4>
            <ul class="space-y-3">
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                React / React Native
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Vue.js
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                JavaScript (ES6+)
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                HTML5 & CSS3
              </li>
            </ul>
          </div>
          <div
            class="bg-white/5 border border-white/10 rounded-xl p-6 lg:p-8 backdrop-blur-sm transition-all duration-300 hover:bg-white/8 hover:border-cyan-400/20 hover:-translate-y-1"
          >
            <h4 class="text-cyan-400 text-lg lg:text-xl font-semibold mb-4">
              Backend
            </h4>
            <ul class="space-y-3">
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Node.js
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Fastify
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                NestJS
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Socket.io
              </li>
            </ul>
          </div>
          <div
            class="bg-white/5 border border-white/10 rounded-xl p-6 lg:p-8 backdrop-blur-sm transition-all duration-300 hover:bg-white/8 hover:border-cyan-400/20 hover:-translate-y-1"
          >
            <h4 class="text-cyan-400 text-lg lg:text-xl font-semibold mb-4">
              Database
            </h4>
            <ul class="space-y-3">
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                PostgreSQL
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                SQL Server
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                MySQL
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Redis
              </li>
            </ul>
          </div>
          <div
            class="bg-white/5 border border-white/10 rounded-xl p-6 lg:p-8 backdrop-blur-sm transition-all duration-300 hover:bg-white/8 hover:border-cyan-400/20 hover:-translate-y-1"
          >
            <h4 class="text-cyan-400 text-lg lg:text-xl font-semibold mb-4">
              Tools & Other
            </h4>
            <ul class="space-y-3">
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Git / GitHub
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Docker
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                AWS
              </li>
              <li
                class="relative pl-6 text-sm lg:text-base text-white/80 hover:text-white/95 transition-colors before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold before:transition-transform hover:before:translate-x-1"
              >
                Agile/Scrum
              </li>
            </ul>
          </div>
        </div>

        <!-- Mobile/Tablet Carousel -->
        <div class="lg:hidden relative">
          <!-- Carousel Navigation Dots -->
          <div class="flex justify-center mb-6 gap-2">
            <button
              class="carousel-dot w-2 h-2 rounded-full bg-cyan-400/80 scale-110 transition-all duration-300 hover:bg-cyan-400/60"
              data-slide="0"></button>
            <button
              class="carousel-dot w-2 h-2 rounded-full bg-white/20 transition-all duration-300 hover:bg-cyan-400/60"
              data-slide="1"></button>
            <button
              class="carousel-dot w-2 h-2 rounded-full bg-white/20 transition-all duration-300 hover:bg-cyan-400/60"
              data-slide="2"></button>
            <button
              class="carousel-dot w-2 h-2 rounded-full bg-white/20 transition-all duration-300 hover:bg-cyan-400/60"
              data-slide="3"></button>
          </div>

          <!-- Carousel Container -->
          <div class="skills-carousel overflow-hidden relative touch-pan-x">
            <div
              class="carousel-track flex transition-transform duration-300 ease-out"
              style="transform: translateX(0%);"
            >
              <!-- Frontend Card -->
              <div class="carousel-slide w-full flex-shrink-0 px-3">
                <div
                  class="bg-white/5 border border-white/10 rounded-xl p-6 backdrop-blur-sm h-full"
                >
                  <h4
                    class="text-cyan-400 text-lg font-semibold mb-4 text-center"
                  >
                    Frontend
                  </h4>
                  <ul class="space-y-3">
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      React / React Native
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Vue.js
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      JavaScript (ES6+)
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      HTML5 & CSS3
                    </li>
                  </ul>
                </div>
              </div>

              <!-- Backend Card -->
              <div class="carousel-slide w-full flex-shrink-0 px-3">
                <div
                  class="bg-white/5 border border-white/10 rounded-xl p-6 backdrop-blur-sm h-full"
                >
                  <h4
                    class="text-cyan-400 text-lg font-semibold mb-4 text-center"
                  >
                    Backend
                  </h4>
                  <ul class="space-y-3">
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Node.js
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Fastify
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      NestJS
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Socket.io
                    </li>
                  </ul>
                </div>
              </div>

              <!-- Database Card -->
              <div class="carousel-slide w-full flex-shrink-0 px-3">
                <div
                  class="bg-white/5 border border-white/10 rounded-xl p-6 backdrop-blur-sm h-full"
                >
                  <h4
                    class="text-cyan-400 text-lg font-semibold mb-4 text-center"
                  >
                    Database
                  </h4>
                  <ul class="space-y-3">
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      PostgreSQL
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      SQL Server
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      MySQL
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Redis
                    </li>
                  </ul>
                </div>
              </div>

              <!-- Tools Card -->
              <div class="carousel-slide w-full flex-shrink-0 px-3">
                <div
                  class="bg-white/5 border border-white/10 rounded-xl p-6 backdrop-blur-sm h-full"
                >
                  <h4
                    class="text-cyan-400 text-lg font-semibold mb-4 text-center"
                  >
                    Tools & Other
                  </h4>
                  <ul class="space-y-3">
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Git / GitHub
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Docker
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      AWS
                    </li>
                    <li
                      class="relative pl-6 text-sm text-white/80 before:content-['▸'] before:absolute before:left-0 before:text-cyan-400 before:font-bold"
                    >
                      Agile/Scrum
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  @media (hover: none) and (pointer: coarse) {
    .hover\\:-translate-y-1:hover { transform: none; }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const carouselTrack = document.querySelector(
      ".carousel-track"
    ) as HTMLElement;
    const carouselDots = document.querySelectorAll(
      ".carousel-dot"
    ) as NodeListOf<HTMLButtonElement>;
    const slides = document.querySelectorAll(
      ".carousel-slide"
    ) as NodeListOf<HTMLElement>;

    if (!carouselTrack || !carouselDots.length || !slides.length) return;

    let currentSlide = 0;
    let startX = 0;
    let currentX = 0;
    let isDragging = false;
    let animationId = 0;

    function updateCarousel(slideIndex: number) {
      // Update slide position
      const translateX = -slideIndex * 100;
      carouselTrack.style.transform = `translateX(${translateX}%)`;
      
      // Update dots with Tailwind classes
      carouselDots.forEach((dot, index) => {
        if (index === slideIndex) {
          dot.className = 'carousel-dot w-2 h-2 rounded-full bg-cyan-400/80 scale-110 transition-all duration-300 hover:bg-cyan-400/60';
        } else {
          dot.className = 'carousel-dot w-2 h-2 rounded-full bg-white/20 transition-all duration-300 hover:bg-cyan-400/60';
        }
      });
      
      currentSlide = slideIndex;
    }    // Dot navigation
    carouselDots.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        updateCarousel(index);
      });
    });

    // Touch/Mouse events for swipe
    function handleStart(clientX: number) {
      isDragging = true;
      startX = clientX;
      currentX = clientX;
      carouselTrack.style.transition = "none";

      if (animationId) {
        cancelAnimationFrame(animationId);
      }
    }

    function handleMove(clientX: number) {
      if (!isDragging) return;

      currentX = clientX;
      const deltaX = currentX - startX;
      const currentTranslate = -currentSlide * 100;
      const newTranslate =
        currentTranslate + (deltaX / carouselTrack.offsetWidth) * 100;

      animationId = requestAnimationFrame(() => {
        carouselTrack.style.transform = `translateX(${newTranslate}%)`;
      });
    }

    function handleEnd() {
      if (!isDragging) return;

      isDragging = false;
      carouselTrack.style.transition = "transform 0.3s ease-out";

      const deltaX = currentX - startX;
      const threshold = carouselTrack.offsetWidth * 0.15; // 15% threshold

      let newSlide = currentSlide;

      if (deltaX > threshold && currentSlide > 0) {
        newSlide = currentSlide - 1;
      } else if (deltaX < -threshold && currentSlide < slides.length - 1) {
        newSlide = currentSlide + 1;
      }

      updateCarousel(newSlide);
    }

    // Mouse events
    carouselTrack.addEventListener("mousedown", (e) => {
      e.preventDefault();
      handleStart(e.clientX);
    });

    document.addEventListener("mousemove", (e) => {
      handleMove(e.clientX);
    });

    document.addEventListener("mouseup", handleEnd);

    // Touch events
    carouselTrack.addEventListener(
      "touchstart",
      (e) => {
        handleStart(e.touches[0].clientX);
      },
      { passive: true }
    );

    carouselTrack.addEventListener(
      "touchmove",
      (e) => {
        handleMove(e.touches[0].clientX);
      },
      { passive: true }
    );

    carouselTrack.addEventListener("touchend", handleEnd, { passive: true });

    // Auto-advance carousel (optional)
    let autoAdvanceInterval: number;

    function startAutoAdvance() {
      autoAdvanceInterval = setInterval(() => {
        const nextSlide = (currentSlide + 1) % slides.length;
        updateCarousel(nextSlide);
      }, 5000); // Change slide every 5 seconds
    }

    function stopAutoAdvance() {
      if (autoAdvanceInterval) {
        clearInterval(autoAdvanceInterval);
      }
    }

    // Start auto-advance
    startAutoAdvance();

    // Pause auto-advance on interaction
    carouselTrack.addEventListener("mouseenter", stopAutoAdvance);
    carouselTrack.addEventListener("mouseleave", startAutoAdvance);
    carouselTrack.addEventListener("touchstart", stopAutoAdvance);

    // Initialize first slide
    updateCarousel(0);
  });
</script>
