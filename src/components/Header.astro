---
const links = [
  { name: "About", href: "#about" },
  { name: "Experience", href: "#experience" },
  { name: "Work", href: "#work" },
  { name: "Contact", href: "#contact" },
];
---

<header class="header-container">
  <div class="header-content">
    <!-- Logo/Brand -->
    <div class="header-brand">
      <a href="#" class="brand-link">
        <span class="brand-text">AP</span>
      </a>
    </div>

    <!-- Desktop Navigation -->
    <nav class="desktop-nav">
      <ul class="nav-list">
        {
          links.map((link, index) => (
            <li class="nav-item">
              <a href={link.href} class="nav-link">
                <span class="nav-number">0{index + 1}.</span>
                {link.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- Mobile Menu Button -->
    <div class="mobile-menu-container">
      <button class="mobile-menu-button" aria-label="Toggle menu">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </div>

    <!-- Mobile Sidebar -->
    <div class="mobile-sidebar">
      <div class="mobile-sidebar-overlay"></div>
      <div class="mobile-sidebar-content">
        <div class="mobile-sidebar-header">
          <button class="mobile-close-button" aria-label="Close menu">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              stroke-width="2"
              stroke="currentColor"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M18 6L6 18M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <nav class="mobile-nav">
          <ul class="mobile-nav-list">
            {
              links.map((link, index) => (
                <li class="mobile-nav-item">
                  <a href={link.href} class="mobile-nav-link">
                    <span class="mobile-nav-number">0{index + 1}.</span>
                    {link.name}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </div>
    </div>
  </div>
</header>

<style>
  .header-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: transparent;
    backdrop-filter: none;
    border-bottom: 1px solid transparent;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    height: 80px;
  }

  .header-container.scrolled {
    background: rgba(10, 10, 15, 0.9);
    backdrop-filter: blur(20px);
    border-bottom-color: rgba(0, 212, 255, 0.3);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  .header-container::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 212, 255, 0.5),
      transparent
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .header-container.scrolled::after {
    opacity: 1;
  }

  .header-content {
    max-width: 1250px;
    margin: 0 auto;
    padding: 0 1.5rem;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  /* Brand/Logo */
  .header-brand {
    z-index: 1001;
  }

  .brand-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .brand-text {
    font-family: "Inter", "Segoe UI", system-ui, sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(90deg, #00d4ff 0%, #9c40ff 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transition: all 0.3s ease;
    text-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
  }

  .brand-link:hover .brand-text {
    transform: scale(1.05);
  }

  /* Desktop Navigation */
  .desktop-nav {
    display: none;
  }

  @media (min-width: 768px) {
    .desktop-nav {
      display: block;
    }
  }

  .nav-list {
    display: flex;
    align-items: center;
    gap: 2.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .nav-item {
    position: relative;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    color: rgba(255, 255, 255, 0.9);
    font-family: "Inter", "Segoe UI", system-ui, sans-serif;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all 0.3s ease;
    padding: 0.5rem 0;
    position: relative;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
  }

  .nav-number {
    color: #00d4ff;
    font-size: 0.8rem;
    font-weight: 500;
    text-shadow: 0 0 10px rgba(0, 212, 255, 0.4);
  }

  .nav-link:hover {
    color: #00d4ff;
    transform: translateY(-2px);
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #00d4ff, #9c40ff);
    transition: width 0.3s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .nav-link.active {
    color: #00d4ff;
  }

  .nav-link.active::after {
    width: 100%;
  }

  /* Mobile Menu */
  .mobile-menu-container {
    display: block;
    z-index: 1001;
  }

  @media (min-width: 768px) {
    .mobile-menu-container {
      display: none;
    }
  }

  .mobile-menu-button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    gap: 4px;
    transition: all 0.3s ease;
  }

  .hamburger-line {
    width: 24px;
    height: 2px;
    background: linear-gradient(90deg, #00d4ff, #9c40ff);
    border-radius: 1px;
    transition: all 0.3s ease;
    transform-origin: center;
  }

  .mobile-menu-button.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translateY(6px);
  }

  .mobile-menu-button.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-button.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translateY(-6px);
  }

  /* Mobile Sidebar */
  .mobile-sidebar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 999;
    visibility: hidden;
    opacity: 0;
    transition: all 0.3s ease;
  }

  .mobile-sidebar.active {
    visibility: visible;
    opacity: 1;
  }

  .mobile-sidebar-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
  }

  .mobile-sidebar-content {
    position: absolute;
    top: 0;
    right: 0;
    width: 280px;
    height: 100vh;
    background: rgba(10, 10, 15, 0.95);
    backdrop-filter: blur(20px);
    border-left: 1px solid rgba(0, 212, 255, 0.2);
    transform: translateX(100%);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  .mobile-sidebar.active .mobile-sidebar-content {
    transform: translateX(0);
  }

  .mobile-sidebar-header {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    height: 80px;
    padding: 0 1.5rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .mobile-close-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: none;
    cursor: pointer;
    color: rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
    border-radius: 50%;
  }

  .mobile-close-button:hover {
    color: #00d4ff;
    background: rgba(0, 212, 255, 0.1);
  }

  .mobile-nav {
    flex: 1;
    padding: 2rem 1.5rem;
  }

  .mobile-nav-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .mobile-nav-item {
    position: relative;
  }

  .mobile-nav-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    color: rgba(255, 255, 255, 0.8);
    font-family: "Inter", "Segoe UI", system-ui, sans-serif;
    font-size: 1.1rem;
    font-weight: 400;
    padding: 1rem 0;
    transition: all 0.3s ease;
    position: relative;
  }

  .mobile-nav-number {
    color: #00d4ff;
    font-size: 0.9rem;
    font-weight: 500;
    min-width: 2rem;
  }

  .mobile-nav-link:hover {
    color: #00d4ff;
    transform: translateX(8px);
  }

  .mobile-nav-link::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0.5rem;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #00d4ff, #9c40ff);
    transition: width 0.3s ease;
  }

  .mobile-nav-link:hover::after {
    width: 100%;
  }

  .mobile-nav-link.active {
    color: #00d4ff;
  }

  .mobile-nav-link.active::after {
    width: 100%;
  }

  /* Responsive adjustments */
  @media (min-width: 1024px) {
    .header-content {
      padding: 0 3rem;
    }

    .nav-list {
      gap: 3rem;
    }

    .nav-link {
      font-size: 1rem;
    }
  }

  /* Smooth scroll offset for sticky header */
  html {
    scroll-padding-top: 100px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const header = document.querySelector(".header-container") as HTMLElement;
    const mobileMenuButton = document.querySelector(
      ".mobile-menu-button"
    ) as HTMLButtonElement;
    const mobileSidebar = document.querySelector(
      ".mobile-sidebar"
    ) as HTMLElement;
    const mobileCloseButton = document.querySelector(
      ".mobile-close-button"
    ) as HTMLButtonElement;
    const mobileOverlay = document.querySelector(
      ".mobile-sidebar-overlay"
    ) as HTMLElement;
    const navLinks = document.querySelectorAll(
      ".nav-link, .mobile-nav-link"
    ) as NodeListOf<HTMLAnchorElement>;

    // Scroll effect for header
    let lastScrollTop = 0;
    window.addEventListener("scroll", function () {
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;

      if (header) {
        if (scrollTop > 80) {
          header.classList.add("scrolled");
        } else {
          header.classList.remove("scrolled");
        }
      }

      lastScrollTop = scrollTop;
    });

    // Mobile menu toggle
    function toggleMobileMenu() {
      if (mobileMenuButton) {
        mobileMenuButton.classList.toggle("active");
      }
      if (mobileSidebar) {
        mobileSidebar.classList.toggle("active");
        document.body.style.overflow = mobileSidebar.classList.contains(
          "active"
        )
          ? "hidden"
          : "";
      }
    }

    function closeMobileMenu() {
      if (mobileMenuButton) {
        mobileMenuButton.classList.remove("active");
      }
      if (mobileSidebar) {
        mobileSidebar.classList.remove("active");
      }
      document.body.style.overflow = "";
    }

    // Event listeners for mobile menu
    mobileMenuButton?.addEventListener("click", toggleMobileMenu);
    mobileCloseButton?.addEventListener("click", closeMobileMenu);
    mobileOverlay?.addEventListener("click", closeMobileMenu);

    // Close mobile menu when clicking nav links
    navLinks.forEach((link) => {
      link.addEventListener("click", function (e: Event) {
        closeMobileMenu();

        // Smooth scroll to section
        const target = e.target as HTMLAnchorElement;
        const href = target.getAttribute("href");
        if (href && href.startsWith("#")) {
          e.preventDefault();
          const targetId = href.substring(1);
          const targetElement = document.getElementById(targetId);

          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: "smooth",
              block: "start",
            });
          }
        }
      });
    });

    // Active link highlighting based on scroll position
    function updateActiveLink() {
      const sections = document.querySelectorAll(
        "section[id]"
      ) as NodeListOf<HTMLElement>;
      const scrollPos = window.scrollY + 100;

      sections.forEach((section) => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute("id");

        if (
          sectionId &&
          scrollPos >= sectionTop &&
          scrollPos < sectionTop + sectionHeight
        ) {
          // Remove active class from all links
          navLinks.forEach((link) => link.classList.remove("active"));

          // Add active class to current section links
          const activeLinks = document.querySelectorAll(
            `a[href="#${sectionId}"]`
          ) as NodeListOf<HTMLAnchorElement>;
          activeLinks.forEach((link) => link.classList.add("active"));
        }
      });
    }

    // Update active link on scroll
    window.addEventListener("scroll", updateActiveLink);

    // Initial active link update
    updateActiveLink();

    // Close mobile menu on escape key
    document.addEventListener("keydown", function (e: KeyboardEvent) {
      if (e.key === "Escape" && mobileSidebar?.classList.contains("active")) {
        closeMobileMenu();
      }
    });
  });
</script>
